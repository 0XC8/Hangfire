@* Generator: Template TypeVisibility: Internal *@

@using Pages
@inherits RazorPage
@{
    Layout = new LayoutPage { Title = "Succeeded Jobs" };

    int from, perPage;

    int.TryParse(Request.QueryString["from"], out from);
    int.TryParse(Request.QueryString["count"], out perPage);

    var pager = new Pager(from, perPage, JobStorage.SucceededListCount())
    {
        BasePageUrl = Request.LinkTo("/succeeded")
    };

    var succeededJobs = JobStorage.SucceededJobs(pager.FromRecord, pager.RecordsPerPage);
}

@if (pager.TotalPageCount == 0)
{
    <div class="alert alert-info">
        No succeeded jobs found.
    </div>
}
else
{
    @RenderPartial(new PerPageSelector(pager))
    
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Job type</th>
                <th>Succeeded</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var job in succeededJobs)
            {
                <tr class="@(job.Value != null && !job.Value.InSucceededState ? "obsolete-data" : null)">
                    <td>
                        <a href="@Request.LinkTo("/job/" + job.Key)">
                            @HtmlHelper.JobId(job.Key)
                        </a>
                        @if (job.Value != null && !job.Value.InSucceededState)
                        {
                            <span title="Job's state has been changed while fetching data." class="glyphicon glyphicon-question-sign"></span>
                        }
                    </td>

                    @if (job.Value == null)
                    {
                        <td colspan="3"><em>Job was expired.</em>
                        </td>
                    }
                    else
                    {
                        <td>
                            @HtmlHelper.QueueLabel(job.Value.Queue)&nbsp;@HtmlHelper.JobType(job.Value.Type)
                        </td>
                        <td>
                            @if (job.Value.SucceededAt.HasValue)
                            {
                                <span  data-moment="@JobHelper.ToStringTimestamp(job.Value.SucceededAt.Value)">
                                    @job.Value.SucceededAt
                                </span>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    
    @RenderPartial(new Paginator(pager))
}