@* Generator: Template TypeVisibility: Internal *@
@using System
@using Pages
@inherits RazorPage
@{
    Layout = new LayoutPage { Title = "Failed Jobs" };
    var failedJobs = JobStorage.FailedJobs();
}

@if (failedJobs.Count == 0)
{
    <div class="alert alert-success">
        Yay! You have no failed jobs.
    </div>
}
else
{
    <table class="table failed-table">
        <thead>
            <tr>
                <th>Failed at</th>
                <th>Queue</th>
                <th>Type</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{ var index = 0; }
            @foreach (var job in failedJobs)
            {
                <tr>
                    <td>@job.Value.FailedAt</td>
                    <td>@HtmlHelper.QueueLabel(job.Value.Queue)</td>
                    <td class="expand-exception">
                        <div>
                            @HtmlHelper.JobType(job.Value.Type)
                        </div>
                        <div style="color: #888;">
                            @job.Value.ExceptionMessage <span class="caret"></span>
                        </div>
                    </td>
                    <td>
                        <div class="pull-right">
                            <button class="btn btn-primary btn-sm" data-ajax="@Request.LinkTo("/failed/retry/" + job.Key)" data-loading-text="Retrying...">
                                <span class="glyphicon glyphicon-repeat"></span>
                                Retry
                            </button>

                            <button class="btn btn-danger btn-sm" data-ajax="@Request.LinkTo("/failed/remove/" + job.Key)" data-loading-text="Deleting...">
                                <span class="glyphicon glyphicon-remove"></span>
                            </button>
                        </div>
                    </td>
                </tr>
                <tr style="@(index++ > 0 ? "display: none;" : null)">
                    <td colspan="4" class="failed-job-details">
                        <h4>@job.Value.ExceptionType</h4>
                        <p>
                            @job.Value.ExceptionMessage
                        </p>
                        
                        @if (!String.IsNullOrEmpty(job.Value.ExceptionDetails))
                        {
                            <pre class="stack-trace">@MarkupStackTrace(job.Value.ExceptionDetails)</pre>
                        }

                        <h4>Job Arguments</h4>
                        <table class="table table-bordered table-striped table-condensed">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Value</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var arg in job.Value.Args)
                                {
                                    <tr>
                                        <td>@arg.Key</td>
                                        <td><code>@arg.Value</code></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}