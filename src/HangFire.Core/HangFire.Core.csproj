<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{C995EA9E-56EE-4951-8260-D94260A7F4C2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>HangFire</RootNamespace>
    <AssemblyName>HangFire.Core</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\HangFire.ruleset</CodeAnalysisRuleSet>
    <DocumentationFile>bin\Debug\HangFire.Core.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Release\HangFire.Core.xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="ServiceStack.Common, Version=3.9.69.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\packages\ServiceStack.Common.3.9.69\lib\net35\ServiceStack.Common.dll</HintPath>
    </Reference>
    <Reference Include="ServiceStack.Interfaces, Version=1.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\packages\ServiceStack.Common.3.9.69\lib\net35\ServiceStack.Interfaces.dll</HintPath>
    </Reference>
    <Reference Include="ServiceStack.Text, Version=3.9.69.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\packages\ServiceStack.Text.3.9.69\lib\net35\ServiceStack.Text.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\Common\SharedAssemblyInfo.cs">
      <Link>Properties\SharedAssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="Common\CachedExpressionCompiler.cs" />
    <Compile Include="Client\CreateJobFailedException.cs" />
    <Compile Include="Client\IJobClient.cs" />
    <Compile Include="Client\JobCreator.cs" />
    <Compile Include="Client\CreateContext.cs" />
    <Compile Include="Common\JobMethod.cs" />
    <Compile Include="Common\JobLoadException.cs" />
    <Compile Include="Common\ExpressionUtil\BinaryExpressionFingerprint.cs" />
    <Compile Include="Common\ExpressionUtil\CachedExpressionCompiler.cs" />
    <Compile Include="Common\ExpressionUtil\ConditionalExpressionFingerprint.cs" />
    <Compile Include="Common\ExpressionUtil\ConstantExpressionFingerprint.cs" />
    <Compile Include="Common\ExpressionUtil\DefaultExpressionFingerprint.cs" />
    <Compile Include="Common\ExpressionUtil\ExpressionFingerprint.cs" />
    <Compile Include="Common\ExpressionUtil\ExpressionFingerprintChain.cs" />
    <Compile Include="Common\ExpressionUtil\FingerprintingExpressionVisitor.cs" />
    <Compile Include="Common\ExpressionUtil\HashCodeCombiner.cs" />
    <Compile Include="Common\ExpressionUtil\Hoisted.cs" />
    <Compile Include="Common\ExpressionUtil\HoistingExpressionVisitor.cs" />
    <Compile Include="Common\ExpressionUtil\IndexExpressionFingerprint.cs" />
    <Compile Include="Common\ExpressionUtil\LambdaExpressionFingerprint.cs" />
    <Compile Include="Common\ExpressionUtil\MemberExpressionFingerprint.cs" />
    <Compile Include="Common\ExpressionUtil\MethodCallExpressionFingerprint.cs" />
    <Compile Include="Common\ExpressionUtil\ParameterExpressionFingerprint.cs" />
    <Compile Include="Common\ExpressionUtil\TypeBinaryExpressionFingerprint.cs" />
    <Compile Include="Common\ExpressionUtil\UnaryExpressionFingerprint.cs" />
    <Compile Include="Common\Filters\JobFilter.cs" />
    <Compile Include="Common\Filters\JobFilterProviderCollection.cs" />
    <Compile Include="Common\Filters\JobFilterProviders.cs" />
    <Compile Include="Common\Filters\JobFilterScope.cs" />
    <Compile Include="Common\Filters\ReflectedAttributeCache.cs" />
    <Compile Include="Client\Filters\ClientExceptionContext.cs" />
    <Compile Include="Common\Filters\GlobalJobFilterCollection.cs" />
    <Compile Include="Client\Filters\IClientExceptionFilter.cs" />
    <Compile Include="Common\Filters\IJobFilterProvider.cs" />
    <Compile Include="Common\States\IStateChangingFilter.cs" />
    <Compile Include="Common\Filters\JobFilterAttribute.cs" />
    <Compile Include="Common\Filters\JobFilterAttributeFilterProvider.cs" />
    <Compile Include="Common\Filters\JobFilterInfo.cs" />
    <Compile Include="Server\Components\SchedulePoller.cs" />
    <Compile Include="Server\Components\ServerWatchdog.cs" />
    <Compile Include="Server\Filters\IServerExceptionFilter.cs" />
    <Compile Include="Client\Filters\CreatedContext.cs" />
    <Compile Include="Client\Filters\CreatingContext.cs" />
    <Compile Include="Server\Performing\JobAsClassPerformStrategy.cs" />
    <Compile Include="Server\Performing\PerformContext.cs" />
    <Compile Include="Server\Filters\ServerExceptionContext.cs" />
    <Compile Include="Server\Filters\PerformedContext.cs" />
    <Compile Include="Server\Filters\PerformingContext.cs" />
    <Compile Include="GlobalJobFilters.cs" />
    <Compile Include="BackgroundJobServer.cs" />
    <Compile Include="Common\States\IStateChangedFilter.cs" />
    <Compile Include="GlobalSuppressions.cs" />
    <Compile Include="Filters\RecurringAttribute.cs" />
    <Compile Include="Filters\RetryAttribute.cs" />
    <Compile Include="Server\DisposableCollection.cs" />
    <Compile Include="Server\IJobFetcher.cs" />
    <Compile Include="Server\IStoppable.cs" />
    <Compile Include="Server\IThreadWrappable.cs" />
    <Compile Include="States\GlobalStateHandlerCollection.cs" />
    <Compile Include="Storage\InvocationData.cs" />
    <Compile Include="Storage\Monitoring\IMonitoringApi.cs" />
    <Compile Include="Storage\Monitoring\DequeuedJobDto.cs" />
    <Compile Include="Storage\Monitoring\EnqueuedJobDto.cs" />
    <Compile Include="Storage\Monitoring\FailedJobDto.cs" />
    <Compile Include="Storage\Monitoring\JobDetailsDto.cs" />
    <Compile Include="Storage\Monitoring\JobList.cs" />
    <Compile Include="Storage\Monitoring\ProcessingJobDto.cs" />
    <Compile Include="Storage\Monitoring\QueueWithTopEnqueuedJobsDto.cs" />
    <Compile Include="Storage\Monitoring\ScheduleDto.cs" />
    <Compile Include="Storage\Monitoring\ServerDto.cs" />
    <Compile Include="Storage\Monitoring\StatisticsDto.cs" />
    <Compile Include="Storage\Monitoring\SucceededJobDto.cs" />
    <Compile Include="Server\Performing\IJobPerformStrategy.cs" />
    <Compile Include="Server\WorkerManager.cs" />
    <Compile Include="Server\JobPayload.cs" />
    <Compile Include="JobStorage.cs" />
    <Compile Include="Server\ThreadWrapper.cs" />
    <Compile Include="States\EnqueuedState.cs" />
    <Compile Include="States\FailedState.cs" />
    <Compile Include="Common\States\JobState.cs" />
    <Compile Include="Client\Filters\IClientFilter.cs" />
    <Compile Include="Common\Filters\IJobFilter.cs" />
    <Compile Include="Server\Filters\IServerFilter.cs" />
    <Compile Include="Filters\PreserveCultureAttribute.cs" />
    <Compile Include="BackgroundJob.cs" />
    <Compile Include="QueueAttribute.cs" />
    <Compile Include="JobActivator.cs" />
    <Compile Include="Server\JobServer.cs" />
    <Compile Include="Server\ServerContext.cs" />
    <Compile Include="Server\Performing\JobAsMethodPerformStrategy.cs" />
    <Compile Include="Server\Performing\JobPerformer.cs" />
    <Compile Include="Client\JobClient.cs" />
    <Compile Include="Server\Worker.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Common\JobHelper.cs" />
    <Compile Include="Server\WorkerContext.cs" />
    <Compile Include="Common\States\JobStateHandler.cs" />
    <Compile Include="States\ProcessingState.cs" />
    <Compile Include="States\ScheduledState.cs" />
    <Compile Include="Common\States\StateApplyingContext.cs" />
    <Compile Include="Common\States\StateChangingContext.cs" />
    <Compile Include="Common\States\StateContext.cs" />
    <Compile Include="States\StateMachine.cs" />
    <Compile Include="States\SucceededState.cs" />
    <Compile Include="Filters\StatisticsHistoryFilterAttribute.cs" />
    <Compile Include="Storage\IWriteOnlyTransaction.cs" />
    <Compile Include="Storage\IStorageConnection.cs" />
    <Compile Include="Storage\StateAndInvocationData.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="..\Common\HangFire.targets" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>