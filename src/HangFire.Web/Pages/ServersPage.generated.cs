#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HangFire.Web.Pages
{
    
    #line 2 "..\..\Pages\ServersPage.cshtml"
    using System;
    
    #line default
    #line hidden
    using System.Collections.Generic;
    
    #line 3 "..\..\Pages\ServersPage.cshtml"
    using System.Linq;
    
    #line default
    #line hidden
    using System.Text;
    
    #line 4 "..\..\Pages\ServersPage.cshtml"
    using Common;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Pages\ServersPage.cshtml"
    using HangFire.Storage;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Pages\ServersPage.cshtml"
    using Pages;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Pages\ServersPage.cshtml"
    using Storage.Monitoring;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    internal partial class ServersPage : RazorPage
    {
#line hidden

        public override void Execute()
        {


WriteLiteral("\n");









            
            #line 9 "..\..\Pages\ServersPage.cshtml"
  
    Layout = new LayoutPage { Title = "Servers" };
    
    var monitor = JobStorage.Current.GetMonitoringApi();
    IList<ServerDto> servers = monitor.Servers();    


            
            #line default
            #line hidden
WriteLiteral("\n");


            
            #line 16 "..\..\Pages\ServersPage.cshtml"
 if (servers.Count == 0)
{

            
            #line default
            #line hidden
WriteLiteral("    <div class=\"alert alert-warning\">\n        There are no active servers. Backgr" +
"ound tasks will not be processed.\n    </div>\n");


            
            #line 21 "..\..\Pages\ServersPage.cshtml"
}
else
{

            
            #line default
            #line hidden
WriteLiteral(@"    <table class=""table"">
        <thead>
            <tr>
                <th>Name</th>
                <th>Workers</th>
                <th>Queues</th>
                <th>Started</th>
                <th>Heartbeat</th>
            </tr>
        </thead>
        <tbody>
");


            
            #line 35 "..\..\Pages\ServersPage.cshtml"
             foreach (var server in servers)
            {

            
            #line default
            #line hidden
WriteLiteral("                <tr>\n                    <td>");


            
            #line 38 "..\..\Pages\ServersPage.cshtml"
                   Write(server.Name.ToUpperInvariant());

            
            #line default
            #line hidden
WriteLiteral("</td>\n                    <td>");


            
            #line 39 "..\..\Pages\ServersPage.cshtml"
                   Write(server.WorkersCount);

            
            #line default
            #line hidden
WriteLiteral("</td>\n                    <td>");


            
            #line 40 "..\..\Pages\ServersPage.cshtml"
                   Write(HtmlHelper.Raw(String.Join(" ", server.Queues.Select(HtmlHelper.QueueLabel))));

            
            #line default
            #line hidden
WriteLiteral("</td>\n                    <td data-moment=\"");


            
            #line 41 "..\..\Pages\ServersPage.cshtml"
                                Write(JobHelper.ToTimestamp(server.StartedAt));

            
            #line default
            #line hidden
WriteLiteral("\">");


            
            #line 41 "..\..\Pages\ServersPage.cshtml"
                                                                          Write(server.StartedAt);

            
            #line default
            #line hidden
WriteLiteral("</td>\n                    <td>\n");


            
            #line 43 "..\..\Pages\ServersPage.cshtml"
                         if (server.Heartbeat.HasValue)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <span data-moment=\"");


            
            #line 45 "..\..\Pages\ServersPage.cshtml"
                                          Write(JobHelper.ToTimestamp(server.Heartbeat.Value));

            
            #line default
            #line hidden
WriteLiteral("\">\n                                ");


            
            #line 46 "..\..\Pages\ServersPage.cshtml"
                           Write(server.Heartbeat);

            
            #line default
            #line hidden
WriteLiteral("\n                            </span>\n");


            
            #line 48 "..\..\Pages\ServersPage.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </td>\n                </tr>\n");


            
            #line 51 "..\..\Pages\ServersPage.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </tbody>\n    </table>\n");


            
            #line 54 "..\..\Pages\ServersPage.cshtml"
}
            
            #line default
            #line hidden

        }
    }
}
#pragma warning restore 1591
