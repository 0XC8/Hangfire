#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HangFire.Web.Pages
{
    
    #line 2 "..\..\Pages\JobDetailsPage.cshtml"
    using System;
    
    #line default
    #line hidden
    using System.Collections.Generic;
    
    #line 3 "..\..\Pages\JobDetailsPage.cshtml"
    using System.Linq;
    
    #line default
    #line hidden
    
    #line 4 "..\..\Pages\JobDetailsPage.cshtml"
    using System.Runtime.CompilerServices;
    
    #line default
    #line hidden
    using System.Text;
    
    #line 5 "..\..\Pages\JobDetailsPage.cshtml"
    using System.Web;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Pages\JobDetailsPage.cshtml"
    using Common;
    
    #line default
    #line hidden
    
    #line 8 "..\..\Pages\JobDetailsPage.cshtml"
    using HangFire.Storage;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Pages\JobDetailsPage.cshtml"
    using Pages;
    
    #line default
    #line hidden
    
    #line 9 "..\..\Pages\JobDetailsPage.cshtml"
    using Storage.Monitoring;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    internal partial class JobDetailsPage : RazorPage
    {
#line hidden

        public override void Execute()
        {


WriteLiteral("\r\n");











            
            #line 11 "..\..\Pages\JobDetailsPage.cshtml"
  
    JobDetailsDto job;
    using (var monitor = JobStorage.Current.GetMonitoringApi())
    {
        job = monitor.JobDetails(JobId.ToString());
    }

    string title = null;

    if (job != null)
    {
        title = HtmlHelper.DisplayMethod(job.Job);
    }

    title = title ?? "Job";

    Layout = new LayoutPage { Title = title };


            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 30 "..\..\Pages\JobDetailsPage.cshtml"
 if (job == null)
{

            
            #line default
            #line hidden
WriteLiteral("    ");

WriteLiteral(" The job with id \'");


            
            #line 32 "..\..\Pages\JobDetailsPage.cshtml"
                   Write(JobId);

            
            #line default
            #line hidden
WriteLiteral("\' was expired or was not existed on the server.\r\n");


            
            #line 33 "..\..\Pages\JobDetailsPage.cshtml"
}
else
{

            
            #line default
            #line hidden
WriteLiteral("    <div class=\"job-snippet-header\">\r\n        <span class=\"job-snippet-tab\">\r\n   " +
"         Job ID: <span class=\"job-snippet-id\">");


            
            #line 38 "..\..\Pages\JobDetailsPage.cshtml"
                                            Write(HtmlHelper.JobId(JobId.ToString(), false));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n        </span>\r\n\r\n        <span class=\"job-snippet-buttons pull-right\">" +
"\r\n            <button class=\"btn btn-xs btn-default\" data-ajax=\"");


            
            #line 42 "..\..\Pages\JobDetailsPage.cshtml"
                                                         Write(Request.LinkTo("/actions/requeue/" + JobId));

            
            #line default
            #line hidden
WriteLiteral("\" data-loading-text=\"Enqueueing...\">Requeue</button>\r\n            <button class=\"" +
"btn btn-xs btn-death\" data-ajax=\"");


            
            #line 43 "..\..\Pages\JobDetailsPage.cshtml"
                                                       Write(Request.LinkTo("/actions/delete/" + JobId));

            
            #line default
            #line hidden
WriteLiteral("\" data-loading-text=\"Deleting...\" data-confirm=\"Do you really want to delete this" +
" job?\">Delete</button>\r\n        </span>\r\n\r\n        <div class=\"clearfix\"></div>\r" +
"\n    </div>\r\n");



WriteLiteral("    <div class=\"job-snippet\">\r\n        <div class=\"job-snippet-code\">\r\n");


            
            #line 50 "..\..\Pages\JobDetailsPage.cshtml"
             if (job.CreatedAt.HasValue)
            {

            
            #line default
            #line hidden
WriteLiteral("                <div class=\"pull-right job-creation-date\">\r\n                    C" +
"reated\r\n                    <span data-moment=\"");


            
            #line 54 "..\..\Pages\JobDetailsPage.cshtml"
                                  Write(JobHelper.ToStringTimestamp(job.CreatedAt.Value));

            
            #line default
            #line hidden
WriteLiteral("\"></span>\r\n                </div>\r\n");


            
            #line 56 "..\..\Pages\JobDetailsPage.cshtml"
            }

            
            #line default
            #line hidden

            
            #line 57 "..\..\Pages\JobDetailsPage.cshtml"
             if (job != null)
            {

            
            #line default
            #line hidden
WriteLiteral("                <pre><code>");


            
            #line 59 "..\..\Pages\JobDetailsPage.cshtml"
                      Write(JobMethodCallRenderer.Render(job.Job));

            
            #line default
            #line hidden
WriteLiteral("</code></pre>\r\n");


            
            #line 60 "..\..\Pages\JobDetailsPage.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            <div class=\"clearfix\"></div>\r\n        </div>\r\n\r\n");


            
            #line 64 "..\..\Pages\JobDetailsPage.cshtml"
         if (job.Properties.Count > 0)
        {

            
            #line default
            #line hidden
WriteLiteral("            <div class=\"job-snippet-properties\">\r\n                <dl>\r\n");


            
            #line 68 "..\..\Pages\JobDetailsPage.cshtml"
                     foreach (var property in job.Properties)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <dt>");


            
            #line 70 "..\..\Pages\JobDetailsPage.cshtml"
                       Write(property.Key);

            
            #line default
            #line hidden
WriteLiteral("</dt>\r\n");



WriteLiteral("                        <dd>\r\n                            <pre>");


            
            #line 72 "..\..\Pages\JobDetailsPage.cshtml"
                            Write(property.Value);

            
            #line default
            #line hidden
WriteLiteral("</pre>\r\n                        </dd>\r\n");


            
            #line 74 "..\..\Pages\JobDetailsPage.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </dl>\r\n            </div>\r\n");


            
            #line 77 "..\..\Pages\JobDetailsPage.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n");


            
            #line 79 "..\..\Pages\JobDetailsPage.cshtml"

    if (job.History.Count > 0)
    {

            
            #line default
            #line hidden
WriteLiteral("        <h3>History</h3>\r\n");


            
            #line 83 "..\..\Pages\JobDetailsPage.cshtml"
        var index = 0;

        DateTime[] entriesCreationTime = job.History.Select(x => x.CreatedAt).ToArray();
        var nextEntry = 1;
        
        foreach (var entry in job.History)
        {
            var background = JobHistoryRenderer.BackgroundStateColors.ContainsKey(entry.StateName)
               ? JobHistoryRenderer.BackgroundStateColors[entry.StateName]
               : null;

            if (index == 0)
            {
                background = JobHistoryRenderer.ForegroundStateColors.ContainsKey(entry.StateName)
                    ? JobHistoryRenderer.ForegroundStateColors[entry.StateName]
                    : null;
            }


            
            #line default
            #line hidden
WriteLiteral("            <div class=\"job-history ");


            
            #line 101 "..\..\Pages\JobDetailsPage.cshtml"
                                Write(index == 0 ? "job-history-current" : null);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n                <div class=\"job-history-heading\" style=\"");


            
            #line 102 "..\..\Pages\JobDetailsPage.cshtml"
                                                    Write(background != null ? String.Format("background-color: {0};", background) : null);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n                    <span class=\"pull-right\" data-moment-title=\"");


            
            #line 103 "..\..\Pages\JobDetailsPage.cshtml"
                                                            Write(JobHelper.ToStringTimestamp(entry.CreatedAt));

            
            #line default
            #line hidden
WriteLiteral("\">\r\n                        ");


            
            #line 104 "..\..\Pages\JobDetailsPage.cshtml"
                   Write(HtmlHelper.ToHumanDuration(entry.CreatedAt - (nextEntry < entriesCreationTime.Length ? entriesCreationTime[nextEntry] : job.CreatedAt)));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 105 "..\..\Pages\JobDetailsPage.cshtml"
                           nextEntry++; 

            
            #line default
            #line hidden
WriteLiteral("                    </span>\r\n                    <h4 class=\"job-history-title\">\r\n" +
"                        ");


            
            #line 108 "..\..\Pages\JobDetailsPage.cshtml"
                   Write(entry.StateName);

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");


            
            #line 110 "..\..\Pages\JobDetailsPage.cshtml"
                         if (!String.IsNullOrWhiteSpace(entry.Reason))
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <small>");


            
            #line 112 "..\..\Pages\JobDetailsPage.cshtml"
                              Write(entry.Reason);

            
            #line default
            #line hidden
WriteLiteral("</small>\r\n");


            
            #line 113 "..\..\Pages\JobDetailsPage.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </h4>\r\n                </div>\r\n\r\n");


            
            #line 117 "..\..\Pages\JobDetailsPage.cshtml"
                 if (JobHistoryRenderer.Exists(entry.StateName))
                {
                    var rendered = JobHistoryRenderer.Render(entry.StateName, entry.Data);
                    if (rendered != null)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div class=\"job-history-body\">\r\n                         " +
"   ");


            
            #line 123 "..\..\Pages\JobDetailsPage.cshtml"
                       Write(rendered);

            
            #line default
            #line hidden
WriteLiteral("\r\n                        </div>\r\n");


            
            #line 125 "..\..\Pages\JobDetailsPage.cshtml"
                    }
                }
                else
                {

            
            #line default
            #line hidden
WriteLiteral("                    <div class=\"job-history-body\">\r\n                        <dl c" +
"lass=\"dl-horizontal\">\r\n");


            
            #line 131 "..\..\Pages\JobDetailsPage.cshtml"
                             foreach (var item in entry.Data)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <dt>");


            
            #line 133 "..\..\Pages\JobDetailsPage.cshtml"
                               Write(item.Key);

            
            #line default
            #line hidden
WriteLiteral(":</dt>\r\n");



WriteLiteral("                                <dd>");


            
            #line 134 "..\..\Pages\JobDetailsPage.cshtml"
                               Write(item.Value);

            
            #line default
            #line hidden
WriteLiteral("</dd>\r\n");


            
            #line 135 "..\..\Pages\JobDetailsPage.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </dl>\r\n                    </div>\r\n");


            
            #line 138 "..\..\Pages\JobDetailsPage.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </div>\r\n");


            
            #line 140 "..\..\Pages\JobDetailsPage.cshtml"

                index++;
        }
    }
}
            
            #line default
            #line hidden

        }
    }
}
#pragma warning restore 1591
