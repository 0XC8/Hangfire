@* Generator: Template TypeVisibility: Public *@
@using System
@using System.Diagnostics
@using System.Linq
@using Hangfire.Storage
@using Storage.Monitoring
@inherits RazorPage
<!DOCTYPE html>

<html lang="en">
<head>
    <title>@Title - Hangfire</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="@LinkTo("/css")" />
</head>
    <body>
        <!-- Wrap all page content here -->
        <div id="wrap">

            <!-- Fixed navbar -->
            <div class="navbar navbar-default navbar-static-top">
                <div class="container">
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        <a class="navbar-brand" href="@LinkTo("/")">Hangfire Dashboard</a>
                    </div>
                    <div class="collapse navbar-collapse">
                        <ul class="nav navbar-nav navbar-right">
                            <li>
                                <a href="/">
                                    <span class="glyphicon glyphicon-log-out"></span>
                                    Back to site
                                </a>
                            </li>
                        </ul>
                    </div>
                    <!--/.nav-collapse -->
                </div>
            </div>

            <!-- Begin page content -->

            <div class="container">
                <div class="col-md-3">
                    @{
                        var monitor = Storage.GetMonitoringApi();
                        StatisticsDto statistics = monitor.GetStatistics();
                    }

                    <div id="stats" class="list-group">
                        <a class="list-group-item @(RequestPath.Equals("/") || RequestPath.Length == 0 ? "active" : null)"
                           href="@LinkTo("/")">
                            <span class="glyphicon glyphicon-dashboard"></span>
                            Dashboard
                        </a>

                        <a class="list-group-item @(RequestPath.Equals("/servers") ? "active" : null)"
                           href="@LinkTo("/servers")">
                            <span class="label label-default pull-right">@statistics.Servers</span>
                            <span class="glyphicon glyphicon-hdd"></span>
                            Servers
                        </a>
                        
                        <a class="list-group-item @(RequestPath.Equals("/recurring") ? "active" : null)"
                           href="@LinkTo("/recurring")">
                            <span id="stats-recurring" class="label label-default pull-right">
                                @statistics.Recurring
                            </span>

                            <span class="glyphicon glyphicon-time"></span>
                            Recurring jobs
                        </a>

                        <a class="list-group-item @(RequestPath.StartsWith("/queues") ? "active" : null)" 
                           href="@LinkTo("/queues")">
                            <span class="label label-default pull-right">
                                <span id="stats-enqueued" title="Enqueued jobs count">
                                    @statistics.Enqueued
                                </span>
                                / 
                                <span id="stats-queues" title="Queues count">
                                    @statistics.Queues
                                </span>
                            </span>
                            <span class="glyphicon glyphicon-inbox"></span>
                            Queues
                        </a>
                        <a class="list-group-item stats-indent @(RequestPath.Equals("/scheduled") ? "active" : null)" 
                           href="@LinkTo("/scheduled")">
                            <span id="stats-scheduled" class="label label-info pull-right">
                                @statistics.Scheduled
                            </span>
                            Scheduled
                        </a>
                        <a class="list-group-item stats-indent @(RequestPath.Equals("/processing") ? "active" : null)" 
                           href="@LinkTo("/processing")">
                            <span id="stats-processing" class="label label-warning pull-right">
                                @statistics.Processing
                            </span>
                            Processing
                        </a>
                        <a class="list-group-item stats-indent @(RequestPath.Equals("/succeeded") ? "active" : null)" 
                           href="@LinkTo("/succeeded")">
                            <span id="stats-succeeded" class="label label-success pull-right">
                                @statistics.Succeeded
                            </span>
                            Succeeded
                        </a>
                        <a class="list-group-item stats-indent @(RequestPath.Equals("/failed") ? "active" : null)" 
                           href="@LinkTo("/failed")">
                            <span id="stats-failed" class="label label-danger pull-right">
                                @statistics.Failed
                            </span>
                            Failed
                        </a>
                        <a class="list-group-item stats-indent @(RequestPath.Equals("/deleted") ? "active" : null)"
                           href="@LinkTo("/deleted")">
                            <span id="stats-deleted" class="label label-default pull-right">
                                @statistics.Deleted
                            </span>
                            Deleted
                        </a>
                    </div>
                </div>
                <div class="col-md-9">
                    @if (Breadcrumbs != null)
                    {
                        <ol class="breadcrumb">
                            <li><a href="@LinkTo("/")"><span class="glyphicon glyphicon-home"></span></a></li>
                            @foreach (var breadcrumb in Breadcrumbs)
                            {
                                <li><a href="@breadcrumb.Value">@breadcrumb.Key</a></li>
                            }
                            <li class="active">@(BreadcrumbsTitle ?? Title)</li>
                        </ol>
                    }

                    <h1 class="page-header">
                        @Title
                        @if (!String.IsNullOrEmpty(Subtitle))
                        {
                            <small>@Subtitle</small>
                        }
                    </h1>
                    @RenderBody()
                </div>
            </div>
        </div>

        <div id="footer">
            <div class="container">
                <ul class="list-inline credit">
                    <li>
                        <a href="http://hangfire.io/" target="_blank">Hangfire 
                            @FileVersionInfo.GetVersionInfo(GetType().Assembly.Location).ProductVersion
                        </a>
                    </li>
                    <li>@Storage</li>
                    <li>Time: @DateTime.UtcNow GMT
                    </li>
                </ul>
            </div>
        </div>
        
        <script>
            (function (hangFire) {
                hangFire.config = {
                    pollInterval: 2000,
                    pollUrl: '@(LinkTo("/stats"))'
                };
            })(window.Hangfire = window.Hangfire || {});
        </script>
        <script src="@LinkTo("/js")"></script>
    </body>
</html>
